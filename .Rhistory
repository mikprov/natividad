names(stress_list) <- site_vector
for(s in 1:length(site_vector)){
stress <- calc_stress(d=bottomall[bottomall$Site==site_vector[s],],
weights=wtsp)
stress$Dstress[is.na(stress$Dstress)] <- 0
stress$expectedT[is.na(stress$expectedT)] <- 0
stress_list[[s]] <- stress
# integrate under short term variability stress curve
yy <- abs(stress[stress$Site==site_vector[s],]$Dstress)
yy <- yy[!is.na(yy)]
xx <- seq(from=1,to=length(yy),by=1)
auc_method1[auc_method1$Site == site_vector[s],]$integral_m1 <- trapz(x=xx,y=yy)
auc_method1[auc_method1$Site == site_vector[s],]$days_in_ts_m1 <- length(xx)
rm(yy,xx,stress)
}
bottomall_stress <- do.call("rbind",stress_list)
bottomall_stress$Dstress_pos_vals <- abs(bottomall_stress$Dstress)
rm(stress_list,wts,wtsp,s)
# -------------------------------------------
# Method 2: integrate temperature curve for when temp is >site-specific threshold
# -------------------------------------------
# a) find site-specific threshold (1 stdev + mean)
site_thresholds <- data.frame(
Site = site_vector,
threshold = rep(NA,length=length(site_vector)),
site_mean = rep(NA,length=length(site_vector)),
site_sd = rep(NA,length=length(site_vector)))
for(s in 1:length(site_vector)){
# fill in mean temp for each site
site_thresholds[site_thresholds$Site==site_vector[s],]$site_mean <-
mean(bottomall[bottomall$Site==site_vector[s],]$Temperature)
# fill in standard deviation for each site
site_thresholds[site_thresholds$Site==site_vector[s],]$site_sd <-
sd(bottomall[bottomall$Site==site_vector[s],]$Temperature)
# set new threshold (mean + sd)
site_thresholds[site_thresholds$Site==site_vector[s],]$threshold <-
site_thresholds[site_thresholds$Site==site_vector[s],]$site_mean +
site_thresholds[site_thresholds$Site==site_vector[s],]$site_sd}
bottomall_stress <- left_join(bottomall_stress,site_thresholds)
# b) get climatology for each site
# use loess() and set span=1.5 months
# span = 90 / number of days in ts = fraction of time series that is 1.5 months
bottomall_stress$climatology <- rep(NA,length=length(bottomall_stress$Site))
for(s in 1:length(site_vector)){
df <- bottomall_stress[bottomall_stress$Site==site_vector[s],]
df$index <- seq(from=1,to=length(df$Site),by=1)
test <- loess(Temperature~index,data=df,span=(90/length(df$index)))
bottomall_stress[bottomall_stress$Site==site_vector[s],]$climatology <- test$fitted}
rm(df,test,s)
# c) climatology - threshold = temps above threshold (units: deg C)
bottomall_stress$clim_minus_thres <- bottomall_stress$climatology - bottomall_stress$threshold
bottomall_stress$degC_above_threshold <- ifelse(bottomall_stress$clim_minus_thres < 0,0,bottomall_stress$clim_minus_thres) #any negative temps (below threshold), convert to 0
# d) integrate the temps above threshold (units: deg C*day)
auc_method2 <- data.frame(
Site = site_vector,
integral_m2 = rep(NA,length=length(site_vector)),
integral_m2_S = rep(NA,length=length(site_vector)),
days_in_ts_m2 = rep(NA,length=length(site_vector)))
for(s in 1:length(site_vector)){ #for each site
d <- bottomall_stress[bottomall_stress$Site==site_vector[s],]
xx <- seq(from=1,to=length(d$Temperature),by=1)
auc_method2[auc_method2$Site == site_vector[s],]$integral_m2 <-
trapz(x=xx,y=d$degC_above_threshold) #integrate under absolute
auc_method2[auc_method2$Site == site_vector[s],]$days_in_ts_m2 <-
length(d$degC_above_threshold)
}
rm(s,d,xx)
# standardize integrals by the number of days at each site
auc_method1$integral_m1_S <- round(auc_method1$integral_m1 / auc_method1$days_in_ts_m1,digits=2)
auc_method2$integral_m2_S <- round(auc_method2$integral_m2 / auc_method2$days_in_ts_m2,digits=2)
# -------------------------------------------
# Method 3: climatology of potential max temp - short term variability (cooling off effect)
# -------------------------------------------
# A) get two types of climatology
bottomall_stress$climatology_max <- rep(NA,length=length(bottomall_stress$Site))
bottomall_stress$climatology_max_mw <- rep(NA,length=length(bottomall_stress$Site))
window_clim = 15
for(s in 1:length(site_vector)){
# subest to a site
df <- bottomall_stress[bottomall_stress$Site==site_vector[s],]
df <- df %>% select(Site,Date,Temperature,climatology)
df$index <- seq(from=1,to=length(df$Site),by=1)
# 1) climatology using values above mean climatolgoy
df$temp_above_clim <- rep(NA,length=length(df$Site))
# pull out values greater than climatology (mean temp)
df$temp_above_clim <- ifelse(df$Temperature > df$climatology,df$Temperature,NA)
addrows <- data.frame(matrix(data=rep(NA,length=ncol(df)),nrow=1,ncol=ncol(df)))
names(addrows) <- names(df)
addrows$temp_above_clim <- mean(df$temp_above_clim,na.rm=TRUE)
addrows$index <- max(df$index) + 1
df1 <- rbind(df,addrows)
tempday <- loess(temp_above_clim~index,data=df1,span=(90/length(df1$index)))
test <- predict(tempday,newdata=df1$index)
bottomall_stress[bottomall_stress$Site==site_vector[s],]$climatology_max <- test[1:nrow(df)]
rm(addrows,tempday,test,df1)
# 2) in moving window (window_clim)
df <- bottomall_stress[bottomall_stress$Site==site_vector[s],]
df <- df %>% select(Site,Temperature)
df$index <- seq(from=1,to=length(df$Site),by=1)
df$temp_mw_maxT <- rep(NA,length=length(df$index))
# add rows to df for moving window max
addrows <- data.frame(matrix(data=rep(0,length=ncol(df)),
nrow=window_clim,ncol=length(rep(0,length=ncol(df))),
byrow=TRUE))
names(addrows) <- names(df)
addrows$Site <- rep(site_vector[s],length=length(addrows$Site))
df1 <- bind_rows(df,addrows)
# loop over extended df (df1)
for(i in 1:(length(df1$index)-window_clim)){
# subset temp data to window
tsub <- df1[i:(i+window_clim-1),]
df1$temp_mw_maxT[i] <- max(tsub$Temperature)  }
# fill in max temp in moving window col in df
df$temp_mw_maxT <- df1$temp_mw_maxT[1:nrow(df)]
# loess using moving window max vals
tempday1 <- loess(temp_mw_maxT~index,data=df,span=(90/length(df$index)))
test1 <- predict(tempday1,newdata=df$index)
bottomall_stress[bottomall_stress$Site==site_vector[s],]$climatology_max_mw <- test1
rm(df1,df,addrows,tempday1,test1)
}
rm(tsub,s,i)
# B) difference between
#   1) climatology_max & threshold
#   2) climatology_max_mw & threshold
bottomall_stress$clim_minus_thres_max <-
bottomall_stress$climatology_max - bottomall_stress$threshold
bottomall_stress$clim_minus_thres_max_mw <-
bottomall_stress$climatology_max_mw - bottomall_stress$threshold
# C) replace negative values with 0
bottomall_stress$degC_above_threshold_clim_max <-
ifelse(bottomall_stress$clim_minus_thres_max < 0,0,bottomall_stress$clim_minus_thres_max)
bottomall_stress$degC_above_threshold_clim_max_mw <-
ifelse(bottomall_stress$clim_minus_thres_max_mw < 0,0,bottomall_stress$clim_minus_thres_max_mw)
# D) integrate the climatology_max above threshold (units: deg C*day)
auc_method3max <- data.frame(
Site = site_vector,
integral_m3max = rep(NA,length=length(site_vector)),
integral_m3max_S = rep(NA,length=length(site_vector)),
days_in_ts_m3max = rep(NA,length=length(site_vector)),
integral_S_minus_shtvar_S_max = rep(NA,length=length(site_vector)),
integral_of_daily_maxclim_minus_shtvar = rep(NA,length=length(site_vector)))
for(s in 1:length(site_vector)){ #for each site
d <- bottomall_stress[bottomall_stress$Site==site_vector[s],]
xx <- seq(from=1,
to=length(d$degC_above_threshold_clim_max[!is.na(d$degC_above_threshold_clim_max)]),
by=1)
auc_method3max[auc_method3max$Site == site_vector[s],]$integral_m3max <-
trapz(x=xx,y=d$degC_above_threshold_clim_max[!is.na(d$degC_above_threshold_clim_max)])
auc_method3max[auc_method3max$Site == site_vector[s],]$days_in_ts_m3max <-
length(d$degC_above_threshold_clim_max[!is.na(d$degC_above_threshold_clim_max)])
}
#integrate under absolute
# E) integrate the climatology_max_mw above threshold (units: deg C*day)
auc_method3max_mw <- data.frame(
Site = site_vector,
integral_m3max_mw = rep(NA,length=length(site_vector)),
integral_m3max_mw_S = rep(NA,length=length(site_vector)),
days_in_ts_m3mw = rep(NA,length=length(site_vector)),
integral_S_minus_shtvar_S_mw = rep(NA,length=length(site_vector)))
for(s in 1:length(site_vector)){ #for each site
d <- bottomall_stress[bottomall_stress$Site==site_vector[s],]
xx <- seq(from=1,
to=length(d$degC_above_threshold_clim_max_mw[!is.na(d$degC_above_threshold_clim_max_mw)]),
by=1)
auc_method3max_mw[auc_method3max_mw$Site == site_vector[s],]$integral_m3max_mw <-
trapz(x=xx,y=d$degC_above_threshold_clim_max_mw[!is.na(d$degC_above_threshold_clim_max_mw)])
auc_method3max_mw[auc_method3max_mw$Site == site_vector[s],]$days_in_ts_m3mw <-
length(d$degC_above_threshold_clim_max[!is.na(d$degC_above_threshold_clim_max)])}
#integrate under absolute
# F) standardize integrals by the number of days at each site
auc_method3max$integral_m3max_S <-
round(auc_method3max$integral_m3max/auc_method3max$days_in_ts_m3max,digits=2)
auc_method3max_mw$integral_m3max_mw_S <-
round(auc_method3max_mw$integral_m3max_mw/auc_method3max_mw$days_in_ts_m3mw,digits=2)
# G) fill in max clim minus short term var column in auc df
auc_method3max$integral_S_minus_shtvar_S_max <-
auc_method3max$integral_m3max_S - auc_method1$integral_m1_S
auc_method3max_mw$integral_S_minus_shtvar_S_mw <-
auc_method3max_mw$integral_m3max_mw_S - auc_method1$integral_m1_S
# H) add col to bottom_stress: max clim above threshold - short-term var stress values
bottomall_stress$degC_above_threshold_clim_max_mw_minus_Dstress <-
bottomall_stress$degC_above_threshold_clim_max_mw - abs(bottomall_stress$Dstress)
# get the shapefile
f <- st_read("C:/Users/Mikaela/Documents/GitHub/natividad/shapefiles/FEDECOOP.shp")
s <- st_read("C:/Users/Mikaela/Documents/GitHub/natividad/shapefiles/countries.shp")
locations <- read.csv("C:/Users/Mikaela/Documents/GitHub/natividad/data/Sensor_Locations_map.csv")
locations <- read.csv("C:/Users/Mikaela/Box Sync/Hopkins_postdoc/natividad/data/Sensor_Locations_map.csv")
names(locations)[1] <- "Site"
locations <- left_join(locations,auc_method1,by='Site')
locations <- left_join(locations,auc_method2,by='Site')
# add columns from new method 3
locations <- left_join(locations, auc_method3max,by='Site')
locations <- left_join(locations, auc_method3max_mw,by='Site')
# Method 3: add together
locations$integral_m3_S <- locations$integral_m1_S + locations$integral_m2_S
# subtract: new method 3(s) - short term var
locations$m3max_minus_stv <-    locations$integral_m3max_S - locations$integral_m1_S
locations$m3max_mw_minus_stv <- locations$integral_m3max_mw_S - locations$integral_m1_S
# rename columns to make sense of maps
colnames(locations)[colnames(locations) == "integral_m1_S"] <- "Short_term_var"
colnames(locations)[colnames(locations) == "integral_m2_S"] <- "Clim_thermal_limit"
colnames(locations)[colnames(locations) == "integral_m3_S"] <- "m1_add_m2"
colnames(locations)[colnames(locations) == "m3max_minus_stv"] <- "Clim_max_thermal_limit"
colnames(locations)[colnames(locations) == "m3max_mw_minus_stv"] <- "Clim_mw_thermal_limit"
p1<-ggplot() +
geom_sf(data=s) +
geom_sf(data=f,col='grey60',fill='grey',alpha=0.3) +
coord_sf(ylim=c(26,29), xlim=c(-116,-112.5)) +
geom_point(data=locations,aes(x=Longtitude,y=Latitude,color=Short_term_var),size=5) +
scale_color_viridis(direction = 1) +
geom_text_repel(data=locations[!locations$Site %in% c('Monterey','VanDamme','Sportfish','LaJolla'),],
aes(x=Longtitude, y=Latitude,label = Site,color=Short_term_var),
segment.color = "grey30",
size = 4,
na.rm = TRUE,
nudge_x = -0.2,
box.padding = 1) +
theme_bw() + xlab("") +ylab("") + ggtitle("Map 1: short-term variability")
p2<-ggplot() +
geom_sf(data=s) +
geom_sf(data=f,col='grey60',fill='grey',alpha=0.3) +
coord_sf(ylim=c(26,29), xlim=c(-116,-112.5)) +
geom_point(data=locations,aes(x=Longtitude,y=Latitude,color=Clim_thermal_limit),size=5) +
scale_color_viridis(direction = 1) +
geom_text_repel(data=locations[!locations$Site %in% c('Monterey','VanDamme','Sportfish','LaJolla'),],
aes(x=Longtitude, y=Latitude,label = Site,color=Clim_thermal_limit),
segment.color = "grey30",
size = 4,
na.rm = TRUE,
nudge_x = -0.2,
box.padding = 1) +
theme_bw() + xlab("") +ylab("") + ggtitle("Map 2: thermal limits")
p3<-ggplot() +
geom_sf(data=s) +
geom_sf(data=f,col='grey60',fill='grey',alpha=0.3) +
coord_sf(ylim=c(26,29), xlim=c(-116,-112.5)) +
geom_point(data=locations,aes(x=Longtitude,y=Latitude,color=m1_add_m2),size=5) +
scale_color_viridis(direction = 1) +
geom_text_repel(data=locations[!locations$Site %in% c('Monterey','VanDamme','Sportfish','LaJolla'),],
aes(x=Longtitude, y=Latitude,label = Site,color=m1_add_m2),
segment.color = "grey30",
size = 4,
na.rm = TRUE,
nudge_x = -0.2,
box.padding = 1) +
theme_bw() + xlab("") +ylab("") + ggtitle("Map 3: short-term var + clim>thermal limit (old method 3)")
p1
p2
rm(list=ls())
# load functions --> ***** CHECK for MG or MP *****
source("C:/Users/Mikaela/Documents/GitHub/natividad/functions.r")
d <- read.csv(file="C:/Users/Mikaela/Box Sync/Hopkins_postdoc/natividad/data/001_FEDECOOP_MS_DATA.csv",stringsAsFactors = FALSE)
d$Date <- as.Date(d$UTC_DateTime,format="%Y-%m-%d") # create date-only column
bottomall <- d %>%
group_by(Site,Date) %>%
sample_n(1) %>%
select(Site,Temperature,Date)# randomly select temp per day
bottomall <- bottomall %>% mutate(year = year(Date)) %>% mutate(month=month(Date))
#names(bottomall)[names(bottomall)=="Temperature"] <- "temp_bottom"
rm(d)
site_vector <- unique(bottomall$Site)
# -------------------------------------------
# Method 1: integrate short-term variability curve
# -------------------------------------------
# moving window to calculate expected T
wts <- c(0.1,0.2,0.4,0.8)
wts <- wts/sum(wts) #make sure weights add up to 1
wtsp <- round(wts*100,digits=0)
auc_method1 <- data.frame(
Site = site_vector,
integral_m1 = rep(NA,length=length(site_vector)),
integral_m1_S = rep(NA,length=length(site_vector)),
days_in_ts_m1 = rep(NA,length=length(site_vector)))
wts <- c(0.1,0.2,0.4,0.8)
wts <- wts/sum(wts) #make sure weights add up to 1
wtsp <- round(wts*100,digits=0)
auc_method1 <- data.frame(
Site = site_vector,
integral_m1 = rep(NA,length=length(site_vector)),
integral_m1_S = rep(NA,length=length(site_vector)),
days_in_ts_m1 = rep(NA,length=length(site_vector)))
stress_list <- as.list(rep(NA,length=length(site_vector)))
names(stress_list) <- site_vector
for(s in 1:length(site_vector)){
stress <- calc_stress(d=bottomall[bottomall$Site==site_vector[s],],
weights=wtsp)
stress$Dstress[is.na(stress$Dstress)] <- 0
stress$expectedT[is.na(stress$expectedT)] <- 0
stress_list[[s]] <- stress
# integrate under short term variability stress curve
yy <- abs(stress[stress$Site==site_vector[s],]$Dstress)
yy <- yy[!is.na(yy)]
xx <- seq(from=1,to=length(yy),by=1)
auc_method1[auc_method1$Site == site_vector[s],]$integral_m1 <- trapz(x=xx,y=yy)
auc_method1[auc_method1$Site == site_vector[s],]$days_in_ts_m1 <- length(xx)
rm(yy,xx,stress)
}
bottomall_stress <- do.call("rbind",stress_list)
bottomall_stress$Dstress_pos_vals <- abs(bottomall_stress$Dstress)
rm(stress_list,wts,wtsp,s)
auc_method1
auc_method1$stress1 <- rep("method1",length=length(auc_method1$Site))
auc_method1
auc_method1$stress_method <- rep("short_term_variability",length=length(auc_method1$Site))
auc_method1
rm(list=ls())
d <- read.csv(file="C:/Users/Mikaela/Box Sync/Hopkins_postdoc/natividad/data/001_FEDECOOP_MS_DATA.csv",stringsAsFactors = FALSE)
d$Date <- as.Date(d$UTC_DateTime,format="%Y-%m-%d") # create date-only column
bottomall <- d %>%
group_by(Site,Date) %>%
sample_n(1) %>%
select(Site,Temperature,Date)# randomly select temp per day
bottomall <- bottomall %>% mutate(year = year(Date)) %>% mutate(month=month(Date))
#names(bottomall)[names(bottomall)=="Temperature"] <- "temp_bottom"
rm(d)
site_vector <- unique(bottomall$Site)
# load functions --> ***** CHECK for MG or MP *****
source("C:/Users/Mikaela/Documents/GitHub/natividad/functions.r")
site_stress_values <- data.frame(
Site = site_vector,
# values for method 1: variability
integral_m1 = rep(NA,length=length(site_vector)),
integral__m1_S = rep(NA,length=length(site_vector)),
# values for method 2: thresholds
integral_m2 = rep(NA,length=length(site_vector)),
integral__m2_S = rep(NA,length=length(site_vector)),
# values for method 3: combo
integral_m3 = rep(NA,length=length(site_vector)),
integral__m3_S = rep(NA,length=length(site_vector)),
# values for method 4: curve
integral_m4 = rep(NA,length=length(site_vector)),
integral__m4_S = rep(NA,length=length(site_vector)),
# temp time series length
days_in_ts = rep(NA,length=length(site_vector)))
# -------------------------------------------
# Method 1: short-term variability, integrate short-term variability curve
# -------------------------------------------
# moving window to calculate expected T
wts <- c(0.1,0.2,0.4,0.8)
wts <- wts/sum(wts) #make sure weights add up to 1
wtsp <- round(wts*100,digits=0)
stress_list <- as.list(rep(NA,length=length(site_vector)))
names(stress_list) <- site_vector
stress_list <- as.list(rep(NA,length=length(site_vector)))
names(stress_list) <- site_vector
names(site_stress_values)
# -------------------------------------------
# Method 1: short-term variability, integrate short-term variability curve
# -------------------------------------------
# moving window to calculate expected T
wts <- c(0.1,0.2,0.4,0.8)
wts <- wts/sum(wts) #make sure weights add up to 1
wtsp <- round(wts*100,digits=0)
stress_list <- as.list(rep(NA,length=length(site_vector)))
names(stress_list) <- site_vector
for(s in 1:length(site_vector)){
stress <- calc_stress(d=bottomall[bottomall$Site==site_vector[s],],
weights=wtsp)
stress$Dstress[is.na(stress$Dstress)] <- 0
stress$expectedT[is.na(stress$expectedT)] <- 0
stress_list[[s]] <- stress
# integrate under short term variability stress curve
yy <- abs(stress[stress$Site==site_vector[s],]$Dstress)
yy <- yy[!is.na(yy)]
xx <- seq(from=1,to=length(yy),by=1)
site_stress_values[site_stress_values$Site == site_vector[s],]$integral_m1 <- trapz(x=xx,y=yy)
site_stress_values[site_stress_values$Site == site_vector[s],]$days_in_ts <- length(xx)
rm(yy,xx,stress)
}
bottomall_stress <- do.call("rbind",stress_list)
bottomall_stress$stress1_pos_vals <- abs(bottomall_stress$Dstress)
rm(stress_list,wts,wtsp,s)
# a) find site-specific threshold (1 stdev + mean)
site_thresholds <- data.frame(
Site = site_vector,
threshold = rep(NA,length=length(site_vector)),
site_mean = rep(NA,length=length(site_vector)),
site_sd = rep(NA,length=length(site_vector)))
for(s in 1:length(site_vector)){
# fill in mean temp for each site
site_thresholds[site_thresholds$Site==site_vector[s],]$site_mean <-
mean(bottomall[bottomall$Site==site_vector[s],]$Temperature)
# fill in standard deviation for each site
site_thresholds[site_thresholds$Site==site_vector[s],]$site_sd <-
sd(bottomall[bottomall$Site==site_vector[s],]$Temperature)
# set new threshold (mean + sd)
site_thresholds[site_thresholds$Site==site_vector[s],]$threshold <-
site_thresholds[site_thresholds$Site==site_vector[s],]$site_mean +
site_thresholds[site_thresholds$Site==site_vector[s],]$site_sd}
bottomall_stress <- left_join(bottomall_stress,site_thresholds)
# b) get climatology for each site
# use loess() and set span=1.5 months
# span = 90 / number of days in ts = fraction of time series that is 1.5 months
bottomall_stress$climatology <- rep(NA,length=length(bottomall_stress$Site))
for(s in 1:length(site_vector)){
df <- bottomall_stress[bottomall_stress$Site==site_vector[s],]
df$index <- seq(from=1,to=length(df$Site),by=1)
test <- loess(Temperature~index,data=df,span=(90/length(df$index)))
bottomall_stress[bottomall_stress$Site==site_vector[s],]$climatology <- test$fitted}
rm(df,test,s)
# c) climatology - threshold = temps above threshold (units: deg C)
bottomall_stress$stress2_clim_minus_thres <- bottomall_stress$climatology - bottomall_stress$threshold
bottomall_stress$stress2_degC_above_threshold <- ifelse(bottomall_stress$stress2_clim_minus_thres < 0,0,bottomall_stress$clim_minus_thres) #any negative temps (below threshold), convert to 0
bottomall_stress$stress2_degC_above_threshold <- ifelse(bottomall_stress$stress2_clim_minus_thres < 0,0,bottomall_stress$stress2_clim_minus_thres) #any negative temps (below threshold), convert to 0
#bottomall_stress$climatology_max <- rep(NA,length=length(bottomall_stress$Site))
bottomall_stress$climatology_max_mw <- rep(NA,length=length(bottomall_stress$Site))
window_clim = 15
for(s in 1:length(site_vector)){
# subest to a site
df <- bottomall_stress[bottomall_stress$Site==site_vector[s],]
df <- df %>% select(Site,Date,Temperature,climatology)
df$index <- seq(from=1,to=length(df$Site),by=1)
# ----------------------------------------------
# block potential climatology using all values >mean clim for now,
# might return if I need it
# ----------------------------------------------
# 1) climatology using values above mean climatolgoy
# df$temp_above_clim <- rep(NA,length=length(df$Site))
# # pull out values greater than climatology (mean temp)
# df$temp_above_clim <- ifelse(df$Temperature > df$climatology,df$Temperature,NA)
# addrows <- data.frame(matrix(data=rep(NA,length=ncol(df)),nrow=1,ncol=ncol(df)))
# names(addrows) <- names(df)
# addrows$temp_above_clim <- mean(df$temp_above_clim,na.rm=TRUE)
# addrows$index <- max(df$index) + 1
# df1 <- rbind(df,addrows)
# tempday <- loess(temp_above_clim~index,data=df1,span=(90/length(df1$index)))
# test <- predict(tempday,newdata=df1$index)
# bottomall_stress[bottomall_stress$Site==site_vector[s],]$climatology_max <- test[1:nrow(df)]
# rm(addrows,tempday,test,df1)
# 2) in moving window (window_clim)
df <- bottomall_stress[bottomall_stress$Site==site_vector[s],]
df <- df %>% select(Site,Temperature)
df$index <- seq(from=1,to=length(df$Site),by=1)
df$temp_mw_maxT <- rep(NA,length=length(df$index))
# add rows to df for moving window max
addrows <- data.frame(matrix(data=rep(0,length=ncol(df)),
nrow=window_clim,ncol=length(rep(0,length=ncol(df))),
byrow=TRUE))
names(addrows) <- names(df)
addrows$Site <- rep(site_vector[s],length=length(addrows$Site))
df1 <- bind_rows(df,addrows)
# loop over extended df (df1)
for(i in 1:(length(df1$index)-window_clim)){
# subset temp data to window
tsub <- df1[i:(i+window_clim-1),]
df1$temp_mw_maxT[i] <- max(tsub$Temperature)  }
# fill in max temp in moving window col in df
df$temp_mw_maxT <- df1$temp_mw_maxT[1:nrow(df)]
# loess using moving window max vals
tempday1 <- loess(temp_mw_maxT~index,data=df,span=(90/length(df$index)))
test1 <- predict(tempday1,newdata=df$index)
bottomall_stress[bottomall_stress$Site==site_vector[s],]$climatology_max_mw <- test1
rm(df1,df,addrows,tempday1,test1)
}
rm(tsub,s,i)
bottomall_stress$stress3_clim_minus_thres_max_mw <-
bottomall_stress$stress3_climatology_max_mw - bottomall_stress$threshold
#bottomall_stress$climatology_max <- rep(NA,length=length(bottomall_stress$Site))
bottomall_stress$stress3_climatology_max_mw <- rep(NA,length=length(bottomall_stress$Site))
window_clim = 15
for(s in 1:length(site_vector)){
# subest to a site
df <- bottomall_stress[bottomall_stress$Site==site_vector[s],]
df <- df %>% select(Site,Date,Temperature,climatology)
df$index <- seq(from=1,to=length(df$Site),by=1)
# ----------------------------------------------
# block potential climatology using all values >mean clim for now,
# might return if I need it
# ----------------------------------------------
# 1) climatology using values above mean climatolgoy
# df$temp_above_clim <- rep(NA,length=length(df$Site))
# # pull out values greater than climatology (mean temp)
# df$temp_above_clim <- ifelse(df$Temperature > df$climatology,df$Temperature,NA)
# addrows <- data.frame(matrix(data=rep(NA,length=ncol(df)),nrow=1,ncol=ncol(df)))
# names(addrows) <- names(df)
# addrows$temp_above_clim <- mean(df$temp_above_clim,na.rm=TRUE)
# addrows$index <- max(df$index) + 1
# df1 <- rbind(df,addrows)
# tempday <- loess(temp_above_clim~index,data=df1,span=(90/length(df1$index)))
# test <- predict(tempday,newdata=df1$index)
# bottomall_stress[bottomall_stress$Site==site_vector[s],]$climatology_max <- test[1:nrow(df)]
# rm(addrows,tempday,test,df1)
# 2) in moving window (window_clim)
df <- bottomall_stress[bottomall_stress$Site==site_vector[s],]
df <- df %>% select(Site,Temperature)
df$index <- seq(from=1,to=length(df$Site),by=1)
df$temp_mw_maxT <- rep(NA,length=length(df$index))
# add rows to df for moving window max
addrows <- data.frame(matrix(data=rep(0,length=ncol(df)),
nrow=window_clim,ncol=length(rep(0,length=ncol(df))),
byrow=TRUE))
names(addrows) <- names(df)
addrows$Site <- rep(site_vector[s],length=length(addrows$Site))
df1 <- bind_rows(df,addrows)
# loop over extended df (df1)
for(i in 1:(length(df1$index)-window_clim)){
# subset temp data to window
tsub <- df1[i:(i+window_clim-1),]
df1$temp_mw_maxT[i] <- max(tsub$Temperature)  }
# fill in max temp in moving window col in df
df$temp_mw_maxT <- df1$temp_mw_maxT[1:nrow(df)]
# loess using moving window max vals
tempday1 <- loess(temp_mw_maxT~index,data=df,span=(90/length(df$index)))
test1 <- predict(tempday1,newdata=df$index)
bottomall_stress[bottomall_stress$Site==site_vector[s],]$stress3_climatology_max_mw <- test1
rm(df1,df,addrows,tempday1,test1)
}
rm(tsub,s,i)
bottomall_stress$stress3_clim_minus_thres_max_mw <-
bottomall_stress$stress3_climatology_max_mw - bottomall_stress$threshold
bottomall_stress$stress3_degC_above_thres_clim_max_mw <-
ifelse(bottomall_stress$stress3_clim_minus_thres_max_mw < 0,0,bottomall_stress$stress3_clim_minus_thres_max_mw)
